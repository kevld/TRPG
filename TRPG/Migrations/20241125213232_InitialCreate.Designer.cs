// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TRPG.Models;

#nullable disable

namespace TRPG.Migrations
{
    [DbContext(typeof(Db))]
    [Migration("20241125213232_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.11");

            modelBuilder.Entity("CharacterSpell", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UnlockedSpellsName")
                        .HasColumnType("TEXT");

                    b.HasKey("CharacterId", "UnlockedSpellsName");

                    b.HasIndex("UnlockedSpellsName");

                    b.ToTable("CharacterSpell");
                });

            modelBuilder.Entity("TRPG.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AttackAndDefenseMagic")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CharmsAndMetamorphosisMagic")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Courage")
                        .HasColumnType("INTEGER");

                    b.Property<int>("House")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Intelligence")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LifePoints")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Loyalty")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxLifePoints")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Objects")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PotionMagic")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Tricking")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("TRPG.Models.Spell", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Name");

                    b.ToTable("Spells");
                });

            modelBuilder.Entity("TRPG.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TRPG.Models.Wand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CharacterId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Rigidity")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("WandHeartType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Wood")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.ToTable("Wands");
                });

            modelBuilder.Entity("CharacterSpell", b =>
                {
                    b.HasOne("TRPG.Models.Character", null)
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TRPG.Models.Spell", null)
                        .WithMany()
                        .HasForeignKey("UnlockedSpellsName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TRPG.Models.Character", b =>
                {
                    b.HasOne("TRPG.Models.User", "User")
                        .WithOne("Character")
                        .HasForeignKey("TRPG.Models.Character", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TRPG.Models.Wand", b =>
                {
                    b.HasOne("TRPG.Models.Character", "Character")
                        .WithOne("Wand")
                        .HasForeignKey("TRPG.Models.Wand", "CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("TRPG.Models.Character", b =>
                {
                    b.Navigation("Wand");
                });

            modelBuilder.Entity("TRPG.Models.User", b =>
                {
                    b.Navigation("Character");
                });
#pragma warning restore 612, 618
        }
    }
}
